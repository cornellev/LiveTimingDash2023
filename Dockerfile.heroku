# === Stage 1: Build the Frontend ===
FROM node:18 AS frontend
WORKDIR /app/frontend

# Copy frontend files
COPY ./frontend /app/frontend/

# Install dependencies and build the frontend
RUN npm install && npm run build

# === Stage 2: Final Image with Backend, Frontend, and Nginx ===
FROM python:3.11-slim
WORKDIR /app

ENV PYTHONPATH=/app

# Install Redis, Supervisor, and Nginx
RUN apt-get update && apt-get install -y redis-server supervisor nginx

# Copy the requirements so that Docker can cache the installation
COPY ./backend/requirements.txt /app/backend/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r /app/backend/requirements.txt

# Copy the backend files
COPY ./backend /app/backend

# Copy built frontend
COPY --from=frontend /app/frontend/dist /app/frontend/dist

# Add supervisor configuration
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Add Nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf
RUN mkdir -p /var/log/nginx && touch /var/log/nginx/error.log /var/log/nginx/access.log && chown -R www-data:www-data /var/log/nginx

# Script to substitute environment variables in nginx.conf
COPY start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Expose the single Heroku port
EXPOSE $PORT

# Start services
CMD ["/app/start.sh"]